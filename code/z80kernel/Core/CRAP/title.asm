;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Pac Menu code - title screen
;
;  2004-01  Scott "Jerry" Lawrence
;
;  $Id: title.asm,v 1.23 2005/04/24 01:12:12 jerry Exp $
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	.module title

titleinit:
	call	cls

	    ; set up the sprites to mspac bank
	ld	a, (gamesel)
	ld	(ogamesel), a

	ld	a, #titlebank
	out	(#gfxport), a		; switch to graphics bank 
	ld	(gamesel), a		; restore bank variable
	call	anisprite

	    ; fill the character ram with #0x40
	ld	hl,#(vidram)
	ld	b, #0x04
	ld	a, #0x40
	call	memsetN

	ld	a, (txtoff)
	cp	#0xff
	jr	z, .tiret
	inc	a
	ld	(txtoff), a
.tiret:
	ret


titledrw:
	    ; draw out the screen graphics
	ld	bc, (timer)
	ld	hl, #(vidram + 0x0046)
	ld	de, #titlevid
	call	rledrawS

	ld	a, (txtoff)
	cp	#TXTOFFLOOPS
	jr	nc, .tdta
	call	retroTitle		; display the title
	call	colorCycle		; change the colors
.tdta:
	call	titl_anim		; animate floating sprites
	ret

titl_anim:
	    ; animate the sprites
	ld	a, (gamesel)
	ld	d, #0
	ld	e, a
	ld	hl, #(romcfg)
	rst	0x10			; load HL with base of mspac config
	push	hl
	push	hl
	push 	hl

	ld	de, #rs_a1
	rst	0x10
	ld	de, #(sprite1)
	ld	a, #0x00
	call	titlexyBC
	call	doasprite

	pop	hl
	ld	de, #rs_a2
	rst	0x10
	ld	de, #(sprite2)
	ld	a, #0x40
	call	titlexyBC
	ld	a, (timer)		; force horiz scroll
	add	a
	ld	b,a
	call	doasprite

	pop	hl
	ld	de, #rs_a3
	rst	0x10
	ld	de, #(sprite3)
	ld	a, #0x80
	call	titlexyBC
	call	doasprite

	pop	hl
	ld	de, #rs_a4
	rst	0x10
	ld	de, #(sprite4)
	ld	a, #0xc0
	call	titlexyBC
	ld	a, (timer)		; force vert scroll
	add	a
	ld	c,a
	call	doasprite
	ret

retroTitle:
	    ; draw out the text	
	ld	hl, #(.retroarcade)
	call	putstrBP		; Retro-Arcade
	ld	hl, #(.versionnumber)
	call	putstrBP		; v1.0 r01
	ld	hl, #(.allelectronics)
	call	putstrBP		; all electronics 2005

	ret

colorCycle:
	    ; fill color ram 
	ld	bc, (timer)
	ld	a, c
	srl	a		; number of srl's determines speed
	and	#0x07
	or	#1

	ld	hl, #(colram)
	ld	b, #0x04
	call	memsetN
	ret


    ; compute sine and cosine from the timer and store it in BC
titlexyBC:
	ld	bc, (timer)
	add	a, c
	ld	c, a
	call	sine
	add	#0x20
	ld	b, a
	push 	bc

	ld	bc, (timer)
	add	a, c
	ld	c, a
	call	cosine
	add	#0x20
	pop	bc
	ld	c, a		; bc now contains XY for sprite 0

	ret
	

.retroarcade:
	.byte	C_white, 0xff, 0x17, 12
	.ascii	"RETRO@ARCADE"

.allelectronics:
	.byte	C_white, 0xff, 0x19, 21
	.ascii	"\\2005@ALL@ELECTRONICS"

.versionnumber:
	.byte	C_white, 0xff, 0x1c, 10
	.ascii	"V2%00@424B"


titlevid:
	;pac
	.byte	0xfd, 0X0f, 0x40, 0x01
	.byte	0xfd, 0X0f, 0x40, 0x01
	.byte	0X03, 0x40, 0xe2, 0xe0, 0x40, 0x40, 0xe2, 0xe0, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xdf, 0xe5, 0x40, 0x40, 0xde, 0xe5, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe3, 0xd9, 0xd3, 0xd3, 0xd7, 0xe1, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe6, 0X04, 0xe8, 0xea, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xdf, 0xf3, 0xf5, 0xf3, 0xe9, 0xeb, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xdf, 0xf2, 0xf4, 0xf2, 0xe8, 0xea, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe7, 0X04, 0xe9, 0xeb, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe2, 0xd8, 0xd6, 0xe0, 0X09, 0x40, 0x01
;.byte	0X03, 0x40, 0xdf, 0xe5, 0xde, 0xe5, 0X09, 0x40, 0x01
	.byte	0X03, 0x40, 0xdf, 0xf2, 0xf4, 0xf2, 0xe8, 0xea, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe7, 0X04, 0xe9, 0xeb, 0X07, 0x40, 0x01

	;hyphen
	.byte	0xfc, 0X04, 0x40, 0xe2, 0xe0, 0X09, 0x40, 0x01
	.byte	0xfd, 0X04, 0x40, 0xe3, 0xe1, 0X09, 0x40, 0x01

	;uber
	.byte	0xfd, 0X05, 0x40, 0xd0, 0xd2, 0xef, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe2, 0xd8, 0xd6, 0xe5, 0X09, 0x40, 0x01
	.byte	0X03, 0x40, 0xe3, 0xd9, 0xd7, 0xd9, 0xd3, 0xee, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe2, 0xe0, 0xe6, 0xea, 0xe2, 0xe0, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe3, 0xd9, 0xd7, 0xd9, 0xd7, 0xe1, 0X07, 0x40, 0x01
	.byte	0X05, 0x40, 0xe6, 0xe8, 0xe8, 0xea, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe2, 0xd8, 0xd6, 0xf3, 0xf5, 0xe5, 0X07, 0x40, 0x01
	.byte	0X03, 0x40, 0xe3, 0xd9, 0xd7, 0xd9, 0xd7, 0xe1, 0X07, 0x40, 0x01
	.byte	0x40, 0xe6, 0xea, 0xe6, 0X04, 0xe8, 0xea, 0X07, 0x40, 0x01
	.byte	0x40, 0xe7, 0xeb, 0xe7, 0X03, 0xe9, 0xf5, 0xe5, 0X07, 0x40, 0x01
	.byte	0x40, 0xe6, 0xea, 0xe6, 0X03, 0xe8, 0xf4, 0xe5, 0X07, 0x40, 0x01
	.byte	0xfd, 0xe7, 0xeb, 0xe7, 0X04, 0xe9, 0xeb, 0X07, 0x40, 0x01
	.byte	0xfd, 0X0f, 0x40, 0x01
	.byte	0xfd, 0X0f, 0x40, 0x01
	.byte	0x02
